import Handlebars from "handlebars";

const colors = {
  action: "#FFFFFF",
  passive: "#bbbbbb",
  active: "#e9b200",
  neutral: "#c3c97b",
  bg: "#4E4E61",
  bgRed: "#700300",
  bgBlue: "#003d70",
};

export const IconFactory = {
  default: (state, attributes, labelTemplate) => {
    const defaultTemplate = {
      line1: "{{state}}",
    };
    return Icon.labelledIcon(
      state,
      attributes,
      labelTemplate || defaultTemplate
    );
  },
  script: {
    default: (state, attributes, labelTemplate) => {
      let icon = Icon.script;
      return Icon.labelledIcon(
        state,
        attributes,
        labelTemplate || IconFactory.switch._defaultLabelTemplate,
        icon
      );
    },
  },
  switch: {
    _defaultLabelTemplate: {
      line1: "",
      line2: "",
      line3: "",
    },

    default: (state, attributes, labelTemplate) => {
      let icon;
      if (state === "on") {
        icon = Icon.switchOn;
      } else {
        icon = Icon.switchOff;
      }
      return Icon.labelledIcon(
        state,
        attributes,
        labelTemplate || IconFactory.switch._defaultLabelTemplate,
        icon
      );
    },
  },
  person: {
    default: (state, attributes, labelTemplate) => {
    let icon;
    if (state === "home") {
      icon = Icon.personHome;
    } else {
      icon = Icon.personNotHome;
    }
    return Icon.labelledIcon(
      state,
      attributes,
      labelTemplate || IconFactory.switch._defaultLabelTemplate,
      icon
    );
  },
  },
  light: {
    default: (state, attributes, labelTemplate) => {
      let icon;
      if (state === "on") {
        icon = Icon.switchOn;
      } else {
        icon = Icon.switchOff;
      }
      return Icon.labelledIcon(
        state,
        attributes,
        labelTemplate || IconFactory.switch._defaultLabelTemplate,
        icon
      );
    },
  },
  input_boolean: {
    default: (state, attributes, labelTemplate) => {
      let icon;
      if (state === "on") {
        icon = Icon.booleanOn;
      } else {
        icon = Icon.booleanOff;
      }
      return Icon.labelledIcon(
        state,
        attributes,
        labelTemplate || IconFactory.switch._defaultLabelTemplate,
        icon
      );
    },
    binary_sensor: {
      default: (state, attributes, labelTemplate) => {
        let icon;
        if (state === "on") {
          icon = Icon.sensorOn;
        } else {
          icon = Icon.sensorOff;
        }
        return Icon.labelledIcon(
          state,
          attributes,
          labelTemplate || IconFactory.switch._defaultLabelTemplate,
          icon
        );
      },
    },

    // eslint-disable-next-line no-unused-vars
    plug: (state, attributes, labelTemplate) => {
      return Icon["plug"](state, attributes);
    },
  },

  weather: {
    default: (state, attributes, labelTemplate) => {
      return Icon.labelledIcon(
        state,
        attributes,
        labelTemplate || IconFactory.sensor._defaultLabelTemplate,
        Icon.weather(state)
      );
    },
  },

  sensor: {
    _defaultLabelTemplate: {
      line1: "{{state}} {{unit_of_measurement}}",
      line2: "",
      line3: "",
    },

    battery: (state, attributes, labelTemplate) => {
      return Icon.labelledIcon(
        state,
        attributes,
        labelTemplate || IconFactory.sensor._defaultLabelTemplate,
        Icon.battery(state),
        49
      );
    },

    temperature: (state, attributes, labelTemplate) => {
      console.log("attributes", attributes);
      return Icon.labelledIcon(
        "",
        attributes,
        labelTemplate || "",
        Icon.temperature(state, state + attributes.unit_of_measurement)
      );
      /*
      return Icon.labelledIcon(
        state,
        attributes,
        labelTemplate || IconFactory.sensor._defaultLabelTemplate,
        Icon.temperature
      );
      */
    },

    humidity: (state, attributes, labelTemplate) => {
      return Icon.labelledIcon(
        state,
        attributes,
        labelTemplate || IconFactory.sensor._defaultLabelTemplate,
        Icon.humidity
      );
    },

    power: (state, attributes, labelTemplate) => {
      return Icon.labelledIcon(
        state,
        attributes,
        labelTemplate || IconFactory.sensor._defaultLabelTemplate,
        Icon.power
      );
    },

    pressure: (state, attributes, labelTemplate = null) => {
      return Icon.labelledIcon(
        state,
        attributes,
        labelTemplate || IconFactory.sensor._defaultLabelTemplate,
        Icon.pressure
      );
    },

    default: (state, attributes, labelTemplate) => {
      return Icon.labelledIcon(
        state,
        attributes,
        labelTemplate || IconFactory.sensor._defaultLabelTemplate
      );
    },
  },
};

const Icon = {
  lightOff: `<defs><style>.fa-secondary{opacity:.4}</style></defs><g transform="translate(35,10), scale(.2 0.2)">
  <path fill="${colors.action}"
    d="M175.45 0C73.44.31 0 83 0 176a175 175 0 0 0 43.56 115.78c16.52 18.85 42.36 58.22 52.21 91.45 0 .26.07.52.11.78h160.24c0-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45A175.9 175.9 0 0 0 175.45 0zm.55 96a80.09 80.09 0 0 0-80 80 16 16 0 0 1-32 0A112.12 112.12 0 0 1 176 64a16 16 0 0 1 0 32z"
    class="fa-secondary"
  />
  <path fill="${colors.action}"
    d="M96.06 454.35L96 416h160v38.35a32 32 0 0 1-5.41 17.65l-17.09 25.73A32 32 0 0 1 206.86 512h-61.71a32 32 0 0 1-26.64-14.28L101.42 472a32 32 0 0 1-5.36-17.65z"
    class="fa-primary"
  />
  </g>`,
  lightOn: `<defs><style>.fa-secondary{opacity:.4}</style></defs><g transform="translate(35,10), scale(.2 0.2)">
  <path fill="${colors.active}"
    d="M175.45 0C73.44.31 0 83 0 176a175 175 0 0 0 43.56 115.78c16.52 18.85 42.36 58.22 52.21 91.45 0 .26.07.52.11.78h160.24c0-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45A175.9 175.9 0 0 0 175.45 0zm.55 96a80.09 80.09 0 0 0-80 80 16 16 0 0 1-32 0A112.12 112.12 0 0 1 176 64a16 16 0 0 1 0 32z"
    class="fa-secondary"
  />
  <path fill="${colors.active}"
    d="M96.06 454.35L96 416h160v38.35a32 32 0 0 1-5.41 17.65l-17.09 25.73A32 32 0 0 1 206.86 512h-61.71a32 32 0 0 1-26.64-14.28L101.42 472a32 32 0 0 1-5.36-17.65z"
    class="fa-primary"
  />
  </g>`,
  personHome: `<defs><style>.fa-secondary{opacity:.4}</style></defs><g transform="translate(27,25), scale(.15 0.15)"><path fill="${colors.active}" d="M570.69,236.27,512,184.44V48a16,16,0,0,0-16-16H432a16,16,0,0,0-16,16V99.67L314.78,10.3C308.5,4.61,296.53,0,288,0s-20.46,4.61-26.74,10.3l-256,226A18.27,18.27,0,0,0,0,248.2a18.67,18.67,0,0,0,4.09,10.71L25.5,282.7a21.14,21.14,0,0,0,12,5.3,21.67,21.67,0,0,0,10.69-4.11l15.9-14V480a32,32,0,0,0,32,32H480a32,32,0,0,0,32-32V269.87l15.91,14A21.86,21.86,0,0,0,538.63,288a20.89,20.89,0,0,0,11.87-5.31l21.41-23.81A21.64,21.64,0,0,0,576,248.19,21,21,0,0,0,570.69,236.27ZM288,176a64,64,0,1,1-64,64A64,64,0,0,1,288,176ZM400,448H176a16,16,0,0,1-16-16,96,96,0,0,1,96-96h64a96,96,0,0,1,96,96A16,16,0,0,1,400,448Z" class="fa-primary"/><path fill="${colors.active}" d="M288,304a64,64,0,1,0-64-64A64,64,0,0,0,288,304Zm32,32H256a96,96,0,0,0-96,96,16,16,0,0,0,16,16H400a16,16,0,0,0,16-16A96,96,0,0,0,320,336Z" class="fa-primary"/></g>`,
  personNotHome: `<defs><style>.fa-secondary{opacity:.4}</style></defs><g transform="translate(35,25), scale(.2 0.2)">
  <path fill="${colors.active}" d="M272 96a48 48 0 1 1 48-48 48 48 0 0 1-48 48z" class="fa-primary"/><path fill="${colors.active}" d="M384 223.81h-44l-26.06-53.2c-12.5-25.53-35.45-44.2-61.78-50.9l-71.11-21.13a95.65 95.65 0 0 0-80.84 17.12l-39.67 30.39A32 32 0 1 0 99.3 197l.18-.13 39.69-30.39c7.67-5.88 17.44-8 25.27-6.13l14.7 4.36L141.68 252A64.09 64.09 0 0 0 168 332.23l85 50.13L225.53 470a32 32 0 0 0 60.79 20c.1-.3.19-.6.28-.9l31.6-101a48.15 48.15 0 0 0-21.64-54.35l-61.24-36.11 31.31-78.21 20.27 41.39a48.31 48.31 0 0 0 43.1 26.94h54a32 32 0 1 0 0-63.95zm-270.31 93.4l-14.8 34.5H32a32 32 0 1 0 0 63.94h77.45a47.88 47.88 0 0 0 44.11-29.06l8.79-20.5-10.67-6.3a95.23 95.23 0 0 1-38-42.58z" class="fa-primary"/>
  </g>`,
  script: `<defs><style>.fa-secondary{opacity:.4}</style></defs><g  transform="translate(10,10), scale(.2 0.2)"><path fill="${colors.neutral}" d="M638.41 387a12.34 12.34 0 0 0-12.2-10.3h-16.5a86.33 86.33 0 0 0-15.9-27.4L602 335a12.42 12.42 0 0 0-2.8-15.7 110.5 110.5 0 0 0-32.1-18.6 12.36 12.36 0 0 0-15.1 5.4l-8.2 14.3a88.86 88.86 0 0 0-31.7 0l-8.2-14.3a12.36 12.36 0 0 0-15.1-5.4 111.83 111.83 0 0 0-32.1 18.6 12.3 12.3 0 0 0-2.8 15.7l8.2 14.3a86.33 86.33 0 0 0-15.9 27.4h-16.5a12.43 12.43 0 0 0-12.2 10.4 112.66 112.66 0 0 0 0 37.1 12.34 12.34 0 0 0 12.2 10.3h16.5a86.33 86.33 0 0 0 15.9 27.4l-8.2 14.3a12.42 12.42 0 0 0 2.8 15.7 110.5 110.5 0 0 0 32.1 18.6 12.36 12.36 0 0 0 15.1-5.4l8.2-14.3a88.86 88.86 0 0 0 31.7 0l8.2 14.3a12.36 12.36 0 0 0 15.1 5.4 111.83 111.83 0 0 0 32.1-18.6 12.3 12.3 0 0 0 2.8-15.7l-8.2-14.3a86.33 86.33 0 0 0 15.9-27.4h16.5a12.43 12.43 0 0 0 12.2-10.4 112.66 112.66 0 0 0 .01-37.1zm-136.8 44.9c-29.6-38.5 14.3-82.4 52.8-52.8 29.59 38.49-14.3 82.39-52.8 52.79zm136.8-343.8a12.34 12.34 0 0 0-12.2-10.3h-16.5a86.33 86.33 0 0 0-15.9-27.4l8.2-14.3a12.42 12.42 0 0 0-2.8-15.7 110.5 110.5 0 0 0-32.1-18.6A12.36 12.36 0 0 0 552 7.19l-8.2 14.3a88.86 88.86 0 0 0-31.7 0l-8.2-14.3a12.36 12.36 0 0 0-15.1-5.4 111.83 111.83 0 0 0-32.1 18.6 12.3 12.3 0 0 0-2.8 15.7l8.2 14.3a86.33 86.33 0 0 0-15.9 27.4h-16.5a12.43 12.43 0 0 0-12.2 10.4 112.66 112.66 0 0 0 0 37.1 12.34 12.34 0 0 0 12.2 10.3h16.5a86.33 86.33 0 0 0 15.9 27.4l-8.2 14.3a12.42 12.42 0 0 0 2.8 15.7 110.5 110.5 0 0 0 32.1 18.6 12.36 12.36 0 0 0 15.1-5.4l8.2-14.3a88.86 88.86 0 0 0 31.7 0l8.2 14.3a12.36 12.36 0 0 0 15.1 5.4 111.83 111.83 0 0 0 32.1-18.6 12.3 12.3 0 0 0 2.8-15.7l-8.2-14.3a86.33 86.33 0 0 0 15.9-27.4h16.5a12.43 12.43 0 0 0 12.2-10.4 112.66 112.66 0 0 0 .01-37.1zm-136.8 45c-29.6-38.5 14.3-82.5 52.8-52.8 29.59 38.49-14.3 82.39-52.8 52.79z" class="fa-secondary"/><path fill="${colors.neutral}" d="M420 303.79L386.31 287a173.78 173.78 0 0 0 0-63.5l33.7-16.8c10.1-5.9 14-18.2 10-29.1-8.9-24.2-25.9-46.4-42.1-65.8a23.93 23.93 0 0 0-30.3-5.3l-29.1 16.8a173.66 173.66 0 0 0-54.9-31.7V58a24 24 0 0 0-20-23.6 228.06 228.06 0 0 0-76 .1A23.82 23.82 0 0 0 158 58v33.7a171.78 171.78 0 0 0-54.9 31.7L74 106.59a23.91 23.91 0 0 0-30.3 5.3c-16.2 19.4-33.3 41.6-42.2 65.8a23.84 23.84 0 0 0 10.5 29l33.3 16.9a173.24 173.24 0 0 0 0 63.4L12 303.79a24.13 24.13 0 0 0-10.5 29.1c8.9 24.1 26 46.3 42.2 65.7a23.93 23.93 0 0 0 30.3 5.3l29.1-16.7a173.66 173.66 0 0 0 54.9 31.7v33.6a24 24 0 0 0 20 23.6 224.88 224.88 0 0 0 75.9 0 23.93 23.93 0 0 0 19.7-23.6v-33.6a171.78 171.78 0 0 0 54.9-31.7l29.1 16.8a23.91 23.91 0 0 0 30.3-5.3c16.2-19.4 33.7-41.6 42.6-65.8a24 24 0 0 0-10.5-29.1zm-151.3 4.3c-77 59.2-164.9-28.7-105.7-105.7 77-59.2 164.91 28.7 105.71 105.7z" class="fa-primary"/></g>`,

  switchOn: `<path fill="${colors.active}" d="m43.428 64.186h57.145c13.786 0 25.001-11.215 25.001-25.001 0-13.786-11.215-25.001-25.001-25.001h-57.145c-13.786 0-25.001 11.215-25.001 25.001 0 13.786 11.215 25.001 25.001 25.001zm57.145-42.859c9.8468 0 17.858 8.011 17.858 17.858 0 9.8468-8.011 17.858-17.858 17.858-9.8468 0-17.858-8.011-17.858-17.858 0-9.8468 8.011-17.858 17.858-17.858z" stroke-width="1.7858"/>`,

  switchOff: `<g fill="${colors.action}" transform="matrix(1.7858 0 0 1.7858 -40.563 -86.408)"><path d="m47.033 60.33c-5.514 0-10 4.486-10 10s4.486 10 10 10 10-4.486 10-10-4.486-10-10-10zm0 18c-4.411 0-8-3.589-8-8s3.589-8 8-8 8 3.589 8 8-3.589 8-8 8z"/><path d="m79.033 56.33h-32c-7.72 0-14 6.28-14 14s6.28 14 14 14h32c7.72 0 14-6.28 14-14s-6.28-14-14-14zm0 26h-32c-6.617 0-12-5.383-12-12s5.383-12 12-12h32c6.617 0 12 5.383 12 12s-5.383 12-12 12z"/></g>`,

  sensorOn: `<path fill="${colors.active}" d="m43.428 64.186h57.145c13.786 0 25.001-11.215 25.001-25.001s-11.215-25.001-25.001-25.001h-57.145c-13.786 0-25.001 11.215-25.001 25.001s11.215 25.001 25.001 25.001z" stroke-width="1.7858"/>`,

  sensorOff: `<path fill="${colors.passive}" d="m100.57 14.186h-57.146c-13.786 0-25.001 11.215-25.001 25.001s11.215 25.001 25.001 25.001h57.146c13.786 0 25.001-11.215 25.001-25.001s-11.215-25.001-25.001-25.001zm0 46.431h-57.146c-11.817 0-21.43-9.613-21.43-21.43s9.613-21.43 21.43-21.43h57.146c11.817 0 21.43 9.613 21.43 21.43s-9.613 21.43-21.43 21.43z" stroke-width="1.7858"/>`,

  booleanOn: `<defs>
  <style>
    .fa-secondary {
      opacity: 0.4;
    }
  </style>
</defs>
<g transform="translate(20,10), scale(.2 0.2)">
  <path fill="${colors.active}"
   d="M256 64C361.869 64 448 150.131 448 256S361.869 448 256 448S64 361.869 64 256S150.131 64 256 64M256 16C123.451 16 16 123.451 16 256S123.451 496 256 496S496 388.549 496 256S388.549 16 256 16L256 16Z"
  />
</g>`,

  booleanOff: `<defs>
    <style>
      .fa-secondary {
        opacity: 0.4;
      }
    </style>
  </defs>
  <g transform="translate(20,10), scale(.2 0.2)">
    <path fill="${colors.passive}"
      d="M256 64C361.869 64 448 150.131 448 256S361.869 448 256 448S64 361.869 64 256S150.131 64 256 64M256 16C123.451 16 16 123.451 16 256S123.451 496 256 496S496 388.549 496 256S388.549 16 256 16L256 16Z"
    />
  </g>`,

  plug: (state, attributes) => {
    console.log(attributes);
    let color;
    if (state === "on") {
      color = colors.active;
    } else {
      color = colors.passive;
    }
    return `<svg width="144" height="144" viewBox="0 0 144 144" xmlns="http://www.w3.org/2000/svg"><g fill="${color}" transform="matrix(.12332 .12932 -.12332 .12932 74.269 -34.817)" stroke-width="5.5994"><path d="m202.7 259.7-31.5 31.5c-5.6 5.6-8.6 13-8.6 20.9s3.1 15.3 8.6 20.9l6.1 6.1-3.7 3.7c-11.1 11.1-29.2 11.1-40.4 0l-31.4-31.4c-20.7-20.7-54.3-20.7-75 0s-20.7 54.3 0 75l31.4 31.5c5.4 5.4 8.4 12.6 8.4 20.2s-3 14.8-8.4 20.2c-4.8 4.8-4.8 12.5 0 17.3 2.4 2.4 5.5 3.6 8.7 3.6 3.1 0 6.3-1.2 8.7-3.6 10-10 15.5-23.3 15.5-37.5s-5.5-27.5-15.5-37.5l-31.4-31.5c-11.1-11.1-11.1-29.2 0-40.4s29.2-11.1 40.4 0l31.4 31.3c20.7 20.7 54.3 20.7 75 0l3.7-3.7 6.1 6.1c5.8 5.8 13.3 8.6 20.9 8.6s15.1-2.9 20.9-8.6l31.5-31.5c11.4 3.7 23.2 5.7 35 5.7 28.7 0 57.4-10.9 79.2-32.7l55.1-55.1 9.9 9.9c2.4 2.4 5.5 3.6 8.7 3.6s6.3-1.2 8.7-3.6c4.8-4.8 4.8-12.5 0-17.3l-40.5-40.5 67-67c4.8-4.8 4.8-12.5 0-17.3s-12.5-4.8-17.3 0l-67 67-62.7-62.6 67-67c4.8-4.8 4.8-12.5 0-17.3s-12.5-4.8-17.3 0l-67 67-40.5-40.5c-4.8-4.8-12.5-4.8-17.3 0s-4.8 12.5 0 17.3l9.9 9.9-55.1 55.1c-30.9 30.9-39.9 75.3-27.2 114.2zm44.4 26.9c-34.1-34.1-34.1-89.6 0-123.7l55.1-55.1 123.8 123.6-55.1 55.1c-34.2 34.2-89.7 34.2-123.8 0.1zm-33.4-3.2c4.5 7.3 9.8 14.2 16.1 20.5s13.2 11.6 20.5 16.1l-25.2 25.2c-1.9 2-5.1 2-7.1 0l-29.5-29.5c-1.3-1.3-1.5-2.8-1.5-3.5 0-0.8 0.2-2.3 1.5-3.5z" stroke-width="5.5994"/></g></svg>`;
  },

  battery: (state) => {
    let levelColor;
    if (state < 15) {
      levelColor = "#FF0000";
    } else if (state < 30) {
      levelColor = "#ff8600";
    } else {
      levelColor = "#00a400";
    }
    return `<g transform="matrix(.5443 0 0 .5443 17.059 -15.377)" stroke-width="1.8372"><g stroke-linecap="round" stroke-linejoin="round" stroke-width="1.8372"><g fill="${
      colors.passive
    }"><rect x="170.13" y="85.397" width="18.486" height="27.963" ry="1.442" stroke-width="3.2133"/><rect x="1.3597" y="58.699" width="180.21" height="81.36" ry="4.1957" stroke-width="17.114"/></g><rect x="8.7026" y="65.534" width="165.53" height="67.69" ry="3.4907" fill="${
      colors.bg
    }" stroke-width="14.96"/><rect x="12.773" y="69.895" width="${
      (157.39 / 100) * state
    }" height="58.968" ry="3.0409" fill="${levelColor}" stroke-width="13.615"/></g></g>`;
  },

  temperature: (state, text) => {
    let fontSize = "40";
    let x = "70";
    if (state.length > 4) {
      fontSize = "30";
      x = "70";
    } else if (state.length < 4) {
      fontSize = "50";
      x = "70";
    }
    return `<g><text fill="#FFF" text-anchor="middle" style="font-size: ${fontSize}px" x="${x}" y="80" dominant-baseline="middle">${text}</text></g>`;
  },
  humidity: `<g transform="matrix(.33757 0 0 .33757 16.535 16.445)" fill="${colors.bgBlue}">
            <path d="m209.31 50.798c-2.452-3.337-7.147-4.055-10.485-1.602s-4.055 7.147-1.603 10.485c54.576 74.266 66.032 123.54 66.032 151.8 0 27.691-8.272 52.794-23.293 70.685-17.519 20.866-42.972 31.446-75.651 31.446-73.031 0-98.944-55.018-98.944-102.13 0-52.227 28.103-103.23 51.679-136.83 25.858-36.847 52.11-61.415 52.37-61.657 3.035-2.819 3.209-7.565 0.39-10.6-2.819-3.034-7.565-3.209-10.599-0.39-1.11 1.031-27.497 25.698-54.254 63.765-24.901 35.428-54.586 89.465-54.586 145.71 0 31.062 9.673 59.599 27.236 80.353 20.361 24.061 50.345 36.779 86.708 36.779 36.794 0 66.926-12.726 87.139-36.801 17.286-20.588 26.806-49.117 26.806-80.33-1e-3 -55.265-37.493-117.88-68.945-160.68z"/>
            <path d="m198.43 148.15-95.162 95.162c-2.929 2.929-2.929 7.678 0 10.606 1.465 1.464 3.385 2.197 5.304 2.197s3.839-0.732 5.304-2.197l95.162-95.162c2.929-2.929 2.929-7.678 0-10.606-2.931-2.929-7.679-2.929-10.608 0z"/>
            <path d="m191.96 207.9c-13.292 0-24.106 10.814-24.106 24.106s10.814 24.106 24.106 24.106 24.106-10.814 24.106-24.106-10.814-24.106-24.106-24.106zm0 33.212c-5.021 0-9.106-4.085-9.106-9.106s4.085-9.106 9.106-9.106 9.106 4.085 9.106 9.106-4.085 9.106-9.106 9.106z"/>
            <path d="m125.18 194.16c13.292 0 24.106-10.814 24.106-24.106s-10.814-24.106-24.106-24.106-24.106 10.814-24.106 24.106 10.814 24.106 24.106 24.106zm0-33.213c5.021 0 9.106 4.085 9.106 9.106s-4.085 9.106-9.106 9.106-9.106-4.085-9.106-9.106 4.084-9.106 9.106-9.106z"/>
            </g>`,
  power: `<g transform="matrix(.28108 0 0 .28108 38.533 38.534)" fill="#6c6500">
  <path d="m205.07 98.678c-1.194-2.728-3.891-4.49-6.869-4.49h-62.33l30.023-84.167c1.197-3.357-0.134-7.094-3.184-8.938-3.052-1.845-6.979-1.287-9.395 1.333l-118.9 128.94c-2.019 2.189-2.551 5.366-1.355 8.094 1.194 2.728 3.891 4.49 6.869 4.49h40.521c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5h-23.403l82.365-89.315-21.24 59.543c-0.818 2.297-0.432 4.849 0.974 6.842 1.405 1.993 3.73 3.178 6.169 3.178h55.772l-82.353 89.305 21.243-59.533c0.82-2.297 0.472-4.849-0.934-6.842s-3.691-3.179-6.13-3.179h-0.074c-3.525 0-6.455 2.432-7.25 5.709l-33.348 93.456c-1.198 3.357 0.133 7.094 3.183 8.938 1.205 0.729 2.547 1.083 3.878 1.083 2.039 0 4.055-0.831 5.517-2.416l118.9-128.94c2.02-2.188 2.552-5.364 1.357-8.092z"/>
 </g>`,
  pressure: `<g transform="matrix(.2088 0 0 .2088 21.063 21.063) translate(0,-572.36)">
   <path fill="${colors.bgBlue}" d="m203.21 877.27c2.6 0 5.2-1 7.1-3l20.3-20.6c4 1.9 8.5 3 13.2 3 16.9 0 30.7-13.7 30.7-30.6 0-4.6-1.1-8.9-2.9-12.7 0 0 0.1 0 0.1-0.1l23.5-23.9v6.2c0 5.5 4.5 10 10 10s10-4.5 10-10v-30.5c0-5.5-4.4-10-10-10h-30.7c-5.5 0-10 4.5-10 10s4.5 10 10 10h6.7l-23.7 24.2-0.1 0.1c-4.1-2-8.7-3.1-13.5-3.1-16.9 0-30.7 13.4-30.7 29.8 0 4.9 1.2 9.5 3.2 13.6l-20.3 20.6c-3.9 3.9-3.8 10.3 0.1 14.1 1.9 1.9 4.5 2.9 7 2.9zm40.7-60.999c5.8 0 10.7 4.5 10.7 9.8 0 6-4.7 10.6-10.7 10.6s-10.7-4.7-10.7-10.6c0-5.3 4.9-9.8 10.7-9.8z"/>
   <path fill="${colors.bg}" d="m292.21 638.57c6.4-19.3 0.5-41.1-15.8-54.2-18.1-16-46-16-64.9-0.1-16.3 13.1-22.3 35-15.9 54.3-95.2 21.8-166.4 106.8-166.4 208.1 0 117.8 96.3 213.6 214.7 213.6s214.8-95.8 214.8-213.6c0-101.3-71.3-186.3-166.5-208.1zm-68.1-38.8c0.1-0.1 0.2-0.1 0.2-0.2 11.5-9.7 28.3-9.8 39-0.2 0.1 0.1 0.3 0.2 0.4 0.4 10.5 8.4 13.8 23 8.4 35.1-9.2-1.2-18.7-1.8-28.2-1.8s-19 0.6-28.2 1.8c-5.5-12.1-2.2-26.701 8.4-35.1zm19.8 440.5c-78.3 0-146-46.2-176.9-112.7h353.7c-30.8 66.5-98.5 112.7-176.8 112.7zm-86.4-294.9c50.1-41.3 122.8-41.3 172.9 0 47.7 39.3 60.4 106.7 31.1 162.2h-235.2c-29.2-55.499-16.6-122.9 31.2-162.2zm270.5 162.3h-44.3c12.1-27.4 16.2-57.8 11.3-87.3-5.8-35.5-24.3-67.6-51.9-90.4-57.5-47.3-140.8-47.3-198.3 0-27.6 22.8-46.1 54.9-51.9 90.4-4.9 29.5-0.8 59.9 11.3 87.3h-45.2c-6.4-19.2-9.9-39.6-9.9-60.9 0.1-106.8 87.4-193.7 194.8-193.7s194.8 86.8 194.8 193.6c0 21.3-3.5 41.8-9.9 61h-0.8z"/>
 </g>`,
  weather: (state) => {
    let weatherIcon;
    // Icons: SVG 24x24
    switch (state) {
      case "clear-night":
        weatherIcon =
          '<path d="M17.75,4.09L15.22,6.03L16.13,9.09L13.5,7.28L10.87,9.09L11.78,6.03L9.25,4.09L12.44,4L13.5,1L14.56,4L17.75,4.09M21.25,11L19.61,12.25L20.2,14.23L18.5,13.06L16.8,14.23L17.39,12.25L15.75,11L17.81,10.95L18.5,9L19.19,10.95L21.25,11M18.97,15.95C19.8,15.87 20.69,17.05 20.16,17.8C19.84,18.25 19.5,18.67 19.08,19.07C15.17,23 8.84,23 4.94,19.07C1.03,15.17 1.03,8.83 4.94,4.93C5.34,4.53 5.76,4.17 6.21,3.85C6.96,3.32 8.14,4.21 8.06,5.04C7.79,7.9 8.75,10.87 10.95,13.06C13.14,15.26 16.1,16.22 18.97,15.95M17.33,17.97C14.5,17.81 11.7,16.64 9.53,14.5C7.36,12.31 6.2,9.5 6.04,6.68C3.23,9.82 3.34,14.64 6.35,17.66C9.37,20.67 14.19,20.78 17.33,17.97Z" />';
        break;
      case "cloudy":
        weatherIcon =
          '<path d="M6,19A5,5 0 0,1 1,14A5,5 0 0,1 6,9C7,6.65 9.3,5 12,5C15.43,5 18.24,7.66 18.5,11.03L19,11A4,4 0 0,1 23,15A4,4 0 0,1 19,19H6M19,13H17V12A5,5 0 0,0 12,7C9.5,7 7.45,8.82 7.06,11.19C6.73,11.07 6.37,11 6,11A3,3 0 0,0 3,14A3,3 0 0,0 6,17H19A2,2 0 0,0 21,15A2,2 0 0,0 19,13Z" />';
        break;
      case "fog":
        weatherIcon =
          '<path d="M3,15H13A1,1 0 0,1 14,16A1,1 0 0,1 13,17H3A1,1 0 0,1 2,16A1,1 0 0,1 3,15M16,15H21A1,1 0 0,1 22,16A1,1 0 0,1 21,17H16A1,1 0 0,1 15,16A1,1 0 0,1 16,15M1,12A5,5 0 0,1 6,7C7,4.65 9.3,3 12,3C15.43,3 18.24,5.66 18.5,9.03L19,9C21.19,9 22.97,10.76 23,13H21A2,2 0 0,0 19,11H17V10A5,5 0 0,0 12,5C9.5,5 7.45,6.82 7.06,9.19C6.73,9.07 6.37,9 6,9A3,3 0 0,0 3,12C3,12.35 3.06,12.69 3.17,13H1.1L1,12M3,19H5A1,1 0 0,1 6,20A1,1 0 0,1 5,21H3A1,1 0 0,1 2,20A1,1 0 0,1 3,19M8,19H21A1,1 0 0,1 22,20A1,1 0 0,1 21,21H8A1,1 0 0,1 7,20A1,1 0 0,1 8,19Z" />';
        break;
      case "hail":
        weatherIcon =
          '<path d="M6,14A1,1 0 0,1 7,15A1,1 0 0,1 6,16A5,5 0 0,1 1,11A5,5 0 0,1 6,6C7,3.65 9.3,2 12,2C15.43,2 18.24,4.66 18.5,8.03L19,8A4,4 0 0,1 23,12A4,4 0 0,1 19,16H18A1,1 0 0,1 17,15A1,1 0 0,1 18,14H19A2,2 0 0,0 21,12A2,2 0 0,0 19,10H17V9A5,5 0 0,0 12,4C9.5,4 7.45,5.82 7.06,8.19C6.73,8.07 6.37,8 6,8A3,3 0 0,0 3,11A3,3 0 0,0 6,14M10,18A2,2 0 0,1 12,20A2,2 0 0,1 10,22A2,2 0 0,1 8,20A2,2 0 0,1 10,18M14.5,16A1.5,1.5 0 0,1 16,17.5A1.5,1.5 0 0,1 14.5,19A1.5,1.5 0 0,1 13,17.5A1.5,1.5 0 0,1 14.5,16M10.5,12A1.5,1.5 0 0,1 12,13.5A1.5,1.5 0 0,1 10.5,15A1.5,1.5 0 0,1 9,13.5A1.5,1.5 0 0,1 10.5,12Z" />';
        break;
      case "lightning":
        weatherIcon =
          '<path d="M6,16A5,5 0 0,1 1,11A5,5 0 0,1 6,6C7,3.65 9.3,2 12,2C15.43,2 18.24,4.66 18.5,8.03L19,8A4,4 0 0,1 23,12A4,4 0 0,1 19,16H18A1,1 0 0,1 17,15A1,1 0 0,1 18,14H19A2,2 0 0,0 21,12A2,2 0 0,0 19,10H17V9A5,5 0 0,0 12,4C9.5,4 7.45,5.82 7.06,8.19C6.73,8.07 6.37,8 6,8A3,3 0 0,0 3,11A3,3 0 0,0 6,14H7A1,1 0 0,1 8,15A1,1 0 0,1 7,16H6M12,11H15L13,15H15L11.25,22L12,17H9.5L12,11Z" />';
        break;
      case "lightning-rainy":
        weatherIcon =
          '<path d="M4.5,13.59C5,13.87 5.14,14.5 4.87,14.96C4.59,15.44 4,15.6 3.5,15.33V15.33C2,14.47 1,12.85 1,11A5,5 0 0,1 6,6C7,3.65 9.3,2 12,2C15.43,2 18.24,4.66 18.5,8.03L19,8A4,4 0 0,1 23,12A4,4 0 0,1 19,16A1,1 0 0,1 18,15A1,1 0 0,1 19,14A2,2 0 0,0 21,12A2,2 0 0,0 19,10H17V9A5,5 0 0,0 12,4C9.5,4 7.45,5.82 7.06,8.19C6.73,8.07 6.37,8 6,8A3,3 0 0,0 3,11C3,12.11 3.6,13.08 4.5,13.6V13.59M9.5,11H12.5L10.5,15H12.5L8.75,22L9.5,17H7L9.5,11M17.5,18.67C17.5,19.96 16.5,21 15.25,21C14,21 13,19.96 13,18.67C13,17.12 15.25,14.5 15.25,14.5C15.25,14.5 17.5,17.12 17.5,18.67Z" />';
        break;
      case "partlycloudy":
        weatherIcon =
          '<path d="M12.74,5.47C15.1,6.5 16.35,9.03 15.92,11.46C17.19,12.56 18,14.19 18,16V16.17C18.31,16.06 18.65,16 19,16A3,3 0 0,1 22,19A3,3 0 0,1 19,22H6A4,4 0 0,1 2,18A4,4 0 0,1 6,14H6.27C5,12.45 4.6,10.24 5.5,8.26C6.72,5.5 9.97,4.24 12.74,5.47M11.93,7.3C10.16,6.5 8.09,7.31 7.31,9.07C6.85,10.09 6.93,11.22 7.41,12.13C8.5,10.83 10.16,10 12,10C12.7,10 13.38,10.12 14,10.34C13.94,9.06 13.18,7.86 11.93,7.3M13.55,3.64C13,3.4 12.45,3.23 11.88,3.12L14.37,1.82L15.27,4.71C14.76,4.29 14.19,3.93 13.55,3.64M6.09,4.44C5.6,4.79 5.17,5.19 4.8,5.63L4.91,2.82L7.87,3.5C7.25,3.71 6.65,4.03 6.09,4.44M18,9.71C17.91,9.12 17.78,8.55 17.59,8L19.97,9.5L17.92,11.73C18.03,11.08 18.05,10.4 18,9.71M3.04,11.3C3.11,11.9 3.24,12.47 3.43,13L1.06,11.5L3.1,9.28C3,9.93 2.97,10.61 3.04,11.3M19,18H16V16A4,4 0 0,0 12,12A4,4 0 0,0 8,16H6A2,2 0 0,0 4,18A2,2 0 0,0 6,20H19A1,1 0 0,0 20,19A1,1 0 0,0 19,18Z" />';
        break;
      case "pouring":
        weatherIcon =
          '<path d="M9,12C9.53,12.14 9.85,12.69 9.71,13.22L8.41,18.05C8.27,18.59 7.72,18.9 7.19,18.76C6.65,18.62 6.34,18.07 6.5,17.54L7.78,12.71C7.92,12.17 8.47,11.86 9,12M13,12C13.53,12.14 13.85,12.69 13.71,13.22L11.64,20.95C11.5,21.5 10.95,21.8 10.41,21.66C9.88,21.5 9.56,20.97 9.7,20.43L11.78,12.71C11.92,12.17 12.47,11.86 13,12M17,12C17.53,12.14 17.85,12.69 17.71,13.22L16.41,18.05C16.27,18.59 15.72,18.9 15.19,18.76C14.65,18.62 14.34,18.07 14.5,17.54L15.78,12.71C15.92,12.17 16.47,11.86 17,12M17,10V9A5,5 0 0,0 12,4C9.5,4 7.45,5.82 7.06,8.19C6.73,8.07 6.37,8 6,8A3,3 0 0,0 3,11C3,12.11 3.6,13.08 4.5,13.6V13.59C5,13.87 5.14,14.5 4.87,14.96C4.59,15.43 4,15.6 3.5,15.32V15.33C2,14.47 1,12.85 1,11A5,5 0 0,1 6,6C7,3.65 9.3,2 12,2C15.43,2 18.24,4.66 18.5,8.03L19,8A4,4 0 0,1 23,12C23,13.5 22.2,14.77 21,15.46V15.46C20.5,15.73 19.91,15.57 19.63,15.09C19.36,14.61 19.5,14 20,13.72V13.73C20.6,13.39 21,12.74 21,12A2,2 0 0,0 19,10H17Z" />';
        break;
      case "rainy":
        weatherIcon =
          '<path d="M6,14.03A1,1 0 0,1 7,15.03C7,15.58 6.55,16.03 6,16.03C3.24,16.03 1,13.79 1,11.03C1,8.27 3.24,6.03 6,6.03C7,3.68 9.3,2.03 12,2.03C15.43,2.03 18.24,4.69 18.5,8.06L19,8.03A4,4 0 0,1 23,12.03C23,14.23 21.21,16.03 19,16.03H18C17.45,16.03 17,15.58 17,15.03C17,14.47 17.45,14.03 18,14.03H19A2,2 0 0,0 21,12.03A2,2 0 0,0 19,10.03H17V9.03C17,6.27 14.76,4.03 12,4.03C9.5,4.03 7.45,5.84 7.06,8.21C6.73,8.09 6.37,8.03 6,8.03A3,3 0 0,0 3,11.03A3,3 0 0,0 6,14.03M12,14.15C12.18,14.39 12.37,14.66 12.56,14.94C13,15.56 14,17.03 14,18C14,19.11 13.1,20 12,20A2,2 0 0,1 10,18C10,17.03 11,15.56 11.44,14.94C11.63,14.66 11.82,14.4 12,14.15M12,11.03L11.5,11.59C11.5,11.59 10.65,12.55 9.79,13.81C8.93,15.06 8,16.56 8,18A4,4 0 0,0 12,22A4,4 0 0,0 16,18C16,16.56 15.07,15.06 14.21,13.81C13.35,12.55 12.5,11.59 12.5,11.59" />';
        break;
      case "snowy":
        weatherIcon =
          '<path d="M6,14A1,1 0 0,1 7,15A1,1 0 0,1 6,16A5,5 0 0,1 1,11A5,5 0 0,1 6,6C7,3.65 9.3,2 12,2C15.43,2 18.24,4.66 18.5,8.03L19,8A4,4 0 0,1 23,12A4,4 0 0,1 19,16H18A1,1 0 0,1 17,15A1,1 0 0,1 18,14H19A2,2 0 0,0 21,12A2,2 0 0,0 19,10H17V9A5,5 0 0,0 12,4C9.5,4 7.45,5.82 7.06,8.19C6.73,8.07 6.37,8 6,8A3,3 0 0,0 3,11A3,3 0 0,0 6,14M7.88,18.07L10.07,17.5L8.46,15.88C8.07,15.5 8.07,14.86 8.46,14.46C8.85,14.07 9.5,14.07 9.88,14.46L11.5,16.07L12.07,13.88C12.21,13.34 12.76,13.03 13.29,13.17C13.83,13.31 14.14,13.86 14,14.4L13.41,16.59L15.6,16C16.14,15.86 16.69,16.17 16.83,16.71C16.97,17.24 16.66,17.79 16.12,17.93L13.93,18.5L15.54,20.12C15.93,20.5 15.93,21.15 15.54,21.54C15.15,21.93 14.5,21.93 14.12,21.54L12.5,19.93L11.93,22.12C11.79,22.66 11.24,22.97 10.71,22.83C10.17,22.69 9.86,22.14 10,21.6L10.59,19.41L8.4,20C7.86,20.14 7.31,19.83 7.17,19.29C7.03,18.76 7.34,18.21 7.88,18.07Z" />';
        break;
      case "snowy-rainy":
        weatherIcon =
          '<path d="M18.5,18.67C18.5,19.96 17.5,21 16.25,21C15,21 14,19.96 14,18.67C14,17.12 16.25,14.5 16.25,14.5C16.25,14.5 18.5,17.12 18.5,18.67M4,17.36C3.86,16.82 4.18,16.25 4.73,16.11L7,15.5L5.33,13.86C4.93,13.46 4.93,12.81 5.33,12.4C5.73,12 6.4,12 6.79,12.4L8.45,14.05L9.04,11.8C9.18,11.24 9.75,10.92 10.29,11.07C10.85,11.21 11.17,11.78 11,12.33L10.42,14.58L12.67,14C13.22,13.83 13.79,14.15 13.93,14.71C14.08,15.25 13.76,15.82 13.2,15.96L10.95,16.55L12.6,18.21C13,18.6 13,19.27 12.6,19.67C12.2,20.07 11.54,20.07 11.15,19.67L9.5,18L8.89,20.27C8.75,20.83 8.18,21.14 7.64,21C7.08,20.86 6.77,20.29 6.91,19.74L7.5,17.5L5.26,18.09C4.71,18.23 4.14,17.92 4,17.36M1,11A5,5 0 0,1 6,6C7,3.65 9.3,2 12,2C15.43,2 18.24,4.66 18.5,8.03L19,8A4,4 0 0,1 23,12A4,4 0 0,1 19,16A1,1 0 0,1 18,15A1,1 0 0,1 19,14A2,2 0 0,0 21,12A2,2 0 0,0 19,10H17V9A5,5 0 0,0 12,4C9.5,4 7.45,5.82 7.06,8.19C6.73,8.07 6.37,8 6,8A3,3 0 0,0 3,11C3,11.85 3.35,12.61 3.91,13.16C4.27,13.55 4.26,14.16 3.88,14.54C3.5,14.93 2.85,14.93 2.47,14.54C1.56,13.63 1,12.38 1,11Z" />';
        break;
      case "sunny":
        weatherIcon =
          '<path d="M12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,2L14.39,5.42C13.65,5.15 12.84,5 12,5C11.16,5 10.35,5.15 9.61,5.42L12,2M3.34,7L7.5,6.65C6.9,7.16 6.36,7.78 5.94,8.5C5.5,9.24 5.25,10 5.11,10.79L3.34,7M3.36,17L5.12,13.23C5.26,14 5.53,14.78 5.95,15.5C6.37,16.24 6.91,16.86 7.5,17.37L3.36,17M20.65,7L18.88,10.79C18.74,10 18.47,9.23 18.05,8.5C17.63,7.78 17.1,7.15 16.5,6.64L20.65,7M20.64,17L16.5,17.36C17.09,16.85 17.62,16.22 18.04,15.5C18.46,14.77 18.73,14 18.87,13.21L20.64,17M12,22L9.59,18.56C10.33,18.83 11.14,19 12,19C12.82,19 13.63,18.83 14.37,18.56L12,22Z" />';
        break;
      case "windy":
        weatherIcon =
          '<path d="M4,10A1,1 0 0,1 3,9A1,1 0 0,1 4,8H12A2,2 0 0,0 14,6A2,2 0 0,0 12,4C11.45,4 10.95,4.22 10.59,4.59C10.2,5 9.56,5 9.17,4.59C8.78,4.2 8.78,3.56 9.17,3.17C9.9,2.45 10.9,2 12,2A4,4 0 0,1 16,6A4,4 0 0,1 12,10H4M19,12A1,1 0 0,0 20,11A1,1 0 0,0 19,10C18.72,10 18.47,10.11 18.29,10.29C17.9,10.68 17.27,10.68 16.88,10.29C16.5,9.9 16.5,9.27 16.88,8.88C17.42,8.34 18.17,8 19,8A3,3 0 0,1 22,11A3,3 0 0,1 19,14H5A1,1 0 0,1 4,13A1,1 0 0,1 5,12H19M18,18H4A1,1 0 0,1 3,17A1,1 0 0,1 4,16H18A3,3 0 0,1 21,19A3,3 0 0,1 18,22C17.17,22 16.42,21.66 15.88,21.12C15.5,20.73 15.5,20.1 15.88,19.71C16.27,19.32 16.9,19.32 17.29,19.71C17.47,19.89 17.72,20 18,20A1,1 0 0,0 19,19A1,1 0 0,0 18,18Z" />';
        break;
      case "windy-variant":
        weatherIcon =
          '<path d="M6,6L6.69,6.06C7.32,3.72 9.46,2 12,2A5.5,5.5 0 0,1 17.5,7.5L17.42,8.45C17.88,8.16 18.42,8 19,8A3,3 0 0,1 22,11A3,3 0 0,1 19,14H6A4,4 0 0,1 2,10A4,4 0 0,1 6,6M6,8A2,2 0 0,0 4,10A2,2 0 0,0 6,12H19A1,1 0 0,0 20,11A1,1 0 0,0 19,10H15.5V7.5A3.5,3.5 0 0,0 12,4A3.5,3.5 0 0,0 8.5,7.5V8H6M18,18H4A1,1 0 0,1 3,17A1,1 0 0,1 4,16H18A3,3 0 0,1 21,19A3,3 0 0,1 18,22C17.17,22 16.42,21.66 15.88,21.12C15.5,20.73 15.5,20.1 15.88,19.71C16.27,19.32 16.9,19.32 17.29,19.71C17.47,19.89 17.72,20 18,20A1,1 0 0,0 19,19A1,1 0 0,0 18,18Z" />';
        break;
      default:
        weatherIcon =
          '<path d="M19.35,10.03C18.67,6.59 15.64,4 12,4C9.11,4 6.6,5.64 5.35,8.03C2.34,8.36 0,10.9 0,14A6,6 0 0,0 6,20H19A5,5 0 0,0 24,15C24,12.36 21.95,10.22 19.35,10.03M13,17H11V15H13V17M14.8,11.82C14.5,12.21 14.13,12.5 13.67,12.75C13.41,12.91 13.24,13.07 13.15,13.26C13.06,13.45 13,13.69 13,14H11C11,13.45 11.11,13.08 11.3,12.82C11.5,12.56 11.85,12.25 12.37,11.91C12.63,11.75 12.84,11.56 13,11.32C13.15,11.09 13.23,10.81 13.23,10.5C13.23,10.18 13.14,9.94 12.96,9.76C12.78,9.56 12.5,9.47 12.2,9.47C11.93,9.47 11.71,9.55 11.5,9.7C11.35,9.85 11.25,10.08 11.25,10.39H9.28C9.23,9.64 9.5,9 10.06,8.59C10.6,8.2 11.31,8 12.2,8C13.14,8 13.89,8.23 14.43,8.68C14.97,9.13 15.24,9.75 15.24,10.5C15.24,11 15.09,11.41 14.8,11.82Z" />';
        break;
    }

    return `<g fill="${colors.bg}" transform="translate(24,6) scale(4,4)">${weatherIcon}</g>`;
  },

  labelledIcon: (
    state,
    attributes,
    templates = {},
    image = "",
    labelTopOffset = 30
  ) => {
    const line1 = new Handlebars.compile(templates.line1 || "")({
      ...{ state },
      ...attributes,
      ...{ colors },
    });
    const line2 = new Handlebars.compile(templates.line2 || "")({
      ...{ state },
      ...attributes,
      ...{ colors },
    });
    const line3 = new Handlebars.compile(templates.line3 || "")({
      ...{ state },
      ...attributes,
      ...{ colors },
    });

    const svg = `<svg width="144" height="144" xmlns="http://www.w3.org/2000/svg">
                    ${image}
                    <g id="text-lines" fill="#FFF" font-family="sans-serif" font-size="28px" text-anchor="middle" alignment-baseline="central">
                        <text x="75" y="${labelTopOffset}" style="stroke:#000000;stroke-width:1.5px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;">${line1}</text>
                        <text x="75" y="${
                          32 + labelTopOffset
                        }" style="stroke:#000000;stroke-width:1.5px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;">${line2}</text>
                        <text x="75" y="${
                          64 + labelTopOffset
                        }" style="stroke:#000000;stroke-width:1.5px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;">${line3}</text>
                    </g>
                </svg>`;

    return svg;
  },
};
